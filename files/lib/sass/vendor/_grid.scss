@charset "UTF-8";

/* ===== @class ===== */
.l-full {
    width: 100%;
}

.l-container {
    margin: 0 auto;
    max-width: calc(var(--container-desktop-large) + var(--grid-gutter));
    padding: 0 calc(var(--grid-gutter) / 2);

    @include max(1920) {
        max-width: calc(var(--container-desktop) + var(--grid-gutter));
    }

    // Macbook Air 13' / MacBook Pro / Surface Pro
    @include max(1440) {
        max-width: calc(var(--container-laptop-large) + var(--grid-gutter));
    }

    // Macbook Air 11'
    @include max(1366) {
        max-width: calc(var(--container-laptop) + var(--grid-gutter));
    }

    // iPad Pro 12.9' Landscape
    @include tablet(1366,1024) {
        max-width: calc(var(--container-ipadpro129-land) + var(--grid-gutter));
    }

    // iPad Pro 10.5' Landscape
    @include tablet(1112,834) {
        max-width: calc(var(--container-ipadpro105-land) + var(--grid-gutter));
    }

    // iPad Pro 12.9' Portlait
    @include tablet(1024,1366) {
        max-width: calc(var(--container-ipadpro129-port) + var(--grid-gutter));
    }

    // iPad and Android Tablet Landscape
    @include tablet(1024,768) {
        max-width: calc(var(--container-ipad-land) + var(--grid-gutter));
    }

    // iPad Pro 10.5' Portlait
    @include tablet(834,1112) {
        max-width: calc(var(--container-ipadpro105-port) + var(--grid-gutter));
    }

    // iPad and Android Tablet Portlait
    @include tablet(768,1024) {
        max-width: calc(var(--container-ipad-port) + var(--grid-gutter));
    }

    // Smartphone
    @include max(767) {
        max-width: calc(100%);
    }

    &.l-laid {
        @include max(767) {
            margin-left: calc(var(--grid-gutter) / -2);
            margin-right: calc(var(--grid-gutter) / -2);
        }
    }
}

.l-row {
    display: flex;
    flex-flow: row wrap;
    justify-content: flex-start;
    margin-left: calc(var(--grid-gutter) / -2);
    margin-right: calc(var(--grid-gutter) / -2);
}

.l-laid {
    display: flex;
    flex-flow: row wrap;
    justify-content: flex-start;
}

[class*="-grid-"] {
    position: relative;
}

@for $i from 1 through $maxcolumn {
    .l-grid-#{$i} {
        flex: 0 0 calc((100% / ( #{$maxcolumn} / #{$i})) - var(--grid-gutter));
        margin: 0 calc(var(--grid-gutter) / 2);
        max-width: calc((100% / ( #{$maxcolumn} / #{$i})) - var(--grid-gutter));
    }
}

.l-grid-auto {
    flex: 1;
    margin: 0 calc(var(--grid-gutter) / 2);
}

@for $i from 1 through $maxcolumn {
    .l-tile-grid-#{$i} {
        flex: 0 0 calc((100% / ( #{$maxcolumn} / #{$i})));
        max-width: calc((100% / ( #{$maxcolumn} / #{$i})));
    }
}

.l-tile-grid-auto {
    flex: 1;
}

@for $i from 1 through $maxcolumn {
    .l-offset-left-#{$i} {
        margin-left: calc((100% / ( #{$maxcolumn} / #{$i})) + (var(--grid-gutter) / 2));
    }
}

@for $i from 1 through $maxcolumn {
    .l-offset-right-#{$i} {
        margin-right: calc((100% / ( #{$maxcolumn} / #{$i})) + (var(--grid-gutter) / 2));
    }
}

[class*="l-offset-left-"] {
    @include max(767) {
        margin-left: calc(var(--grid-gutter) / 2);
    }
}

[class*="l-offset-right-"] {
    @include max(767) {
        margin-right: calc(var(--grid-gutter) / 2);
    }
}

[class*="l-grid-"] {
    @include max(767) {
        flex: 1 0 calc(100% / ( #{$maxcolumn} / #{$maxcolumn} ) - var(--grid-gutter));
        margin-left: calc(var(--grid-gutter) / 2);
        margin-right: calc(var(--grid-gutter) / 2);
        max-width: calc(100% / ( #{$maxcolumn} / #{$maxcolumn} ) - var(--grid-gutter));
    }
}

[class*="l-tile-grid-"] {
    @include max(767) {
        flex: 0 0 calc((100% / ( #{$maxcolumn} / #{$maxcolumn})));
        max-width: 0 0 calc((100% / ( #{$maxcolumn} / #{$maxcolumn})));
    }
}

/* ===== @mixin ===== */
@mixin l-full {
    width: 100%;
}

@mixin l-container {
    margin: 0 auto;
    max-width: calc(var(--container-desktop) + var(--grid-gutter));
    padding: 0 calc(var(--grid-gutter) / 2);

    @include max(1440) {
        max-width: calc(var(--container-laptop-large) + var(--grid-gutter));
    }

    @include max(1366) {
        max-width: calc(var(--container-laptop) + var(--grid-gutter));
    }

    @include tablet(1366,1024) {
        max-width: calc(var(--container-ipadpro129-land) + var(--grid-gutter));
    }

    @include tablet(1024,1366) {
        max-width: calc(var(--container-ipadpro129-port) + var(--grid-gutter));
    }

    @include tablet(1112,834) {
        max-width: calc(var(--container-ipadpro105-land) + var(--grid-gutter));
    }

    @include tablet(834,1112) {
        max-width: calc(var(--container-ipadpro105-port) + var(--grid-gutter));
    }

    @include tablet(1024,768) {
        max-width: calc(var(--container-ipad-land) + var(--grid-gutter));
    }

    @include tablet(768,1024) {
        max-width: calc(var(--container-ipad-port) + var(--grid-gutter));
    }

    @include max(767) {
        max-width: calc(100% - var(--grid-gutter) / 2);
    }
}

@mixin l-row {
    display: flex;
    flex-flow: row wrap;
    justify-content: flex-start;
    margin-left: calc(var(--grid-gutter) / -2);
    margin-right: calc(var(--grid-gutter) / -2);
}

@mixin l-laid {
    display: flex;
    flex-flow: row wrap;
    justify-content: flex-start;

    @include max(767) {
        margin-left: calc(var(--grid-gutter) / -2);
        margin-right: calc(var(--grid-gutter) / -2);
    }
}

@mixin grid-style {
    margin: 0 calc(var(--grid-gutter) / 2);
    position: relative;
}

@mixin l-offset($offset-left:0,$offset-right:0) {
    margin-left: calc(( 100% / ( #{$maxcolumn} / #{$offset-left})) + (var(--grid-gutter) / 2));
    margin-right: calc(( 100% / ( #{$maxcolumn} / #{$offset-right})) + (var(--grid-gutter) / 2));

    @if $offset-left == 0 {
        margin-left: calc(var(--grid-gutter) / 2);
    }

    @if $offset-left !=0 {
        margin-left: calc(( 100% / ( #{$maxcolumn} / #{$offset-left})) + (var(--grid-gutter) / 2));

        @include max(767) {
            margin-left: calc(var(--grid-gutter) / 2);
        }
    }

    @if $offset-right == 0 {
        margin-right: calc(var(--grid-gutter) / 2);
    }

    @if $offset-right !=0 {
        margin-right: calc(( 100% / ( #{$maxcolumn} / #{$offset-right})) + (var(--grid-gutter) / 2));

        @include max(767) {
            margin-right: calc(var(--grid-gutter) / 2);
        }
    }
}

@mixin l-offset-left($offset-left:0) {
    @if $offset-left == 0 {
        margin-right: calc(var(--grid-gutter) / 2);
    }

    @if $offset-left !=0 {
        margin-left: calc(( 100% / ( #{$maxcolumn} / #{$offset-left})) + (var(--grid-gutter) / 2));

        @include max(767) {
            margin-left: calc(var(--grid-gutter) / 2);
        }
    }
}

@mixin l-offset-right($offset-right:0) {
    @if $offset-right == 0 {
        margin-right: calc(var(--grid-gutter) / 2);
    }

    @if $offset-right !=0 {
        margin-right: calc(( 100% / ( #{$maxcolumn} / #{$offset-right})) + (var(--grid-gutter) / 2));

        @include max(767) {
            margin-right: calc(var(--grid-gutter) / 2);
        }
    }
}

@mixin l-grid($grid:0) {
    @if $grid == 0 {
        flex: 1;
    }

    @if $grid !=0 {
        flex: 0 0 calc((100% / (#{$maxcolumn} / #{$grid})) - var(--grid-gutter));
        max-width: calc((100% / (#{$maxcolumn} / #{$grid})) - var(--grid-gutter));
    }

    margin: 0 calc(var(--grid-gutter) / 2);
    position: relative;
}

@mixin l-column($column:0) {
    @if $column == 0 {
        flex: 1;
    }

    @if $column !=0 {
        flex: 0 0 calc((100% / #{$column}) - var(--grid-gutter));
        max-width: calc((100% / #{$column}) - var(--grid-gutter));
    }

    margin: 0 calc(var(--grid-gutter) / 2);
    position: relative;
}

@mixin l-tile-grid($tilegrid:0) {
    @if $tilegrid == 0 {
        flex: 1;
    }

    @if $tilegrid !=0 {
        flex: 0 0 calc(100% / (#{$maxcolumn} / #{$tilegrid}));
        max-width: calc(100% / (#{$maxcolumn} / #{$tilegrid}));
    }

    position: relative;
}

@mixin l-tile-column($tilecolumn:0) {
    @if $tilecolumn == 0 {
        flex: 1;
    }

    @if $tilecolumn !=0 {
        flex: 0 0 calc(100% / #{$tilecolumn});
        max-width: calc(100% / #{$tilecolumn});
    }

    position: relative;
}
